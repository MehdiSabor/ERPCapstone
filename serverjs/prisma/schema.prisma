generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Client {
  code_clt            Int                   @id @default(autoincrement())
  CLIENT              String
  COMPTE              String          @unique
  TEL                 String?
  MOBILE              String?
  CONTACT             String?
  ADRESSE_SIEGE       String?
  ADRESSE_LIV         String?
  VILLE               String
  PAYS                String?
  nat_clt             String?
  conditions          String?
  NOTES               String?
  ECHEANCE            Int
  MODE_PAIE           String?
  BLOQUER             Boolean               @default(false)
  CODE_PST            String?
  PLAFOND_SLD         Float
  CODE_COM            Int?
  MODELIV             String?
  CODE_CAT            Int?
  plaf_ech            Float?
  mode_paie_final     String?
  PATENTE             String?
  BANQUE              String?
  COMPTEBNQ           String?
  reg_trans           String?
  CAPSOC              String?
  FORMJUR             String?
  ICE                 String?
  objectif            Float?
  remise_sp           Float?
  email               String?
  REMISE_G            Float?
  SOLDE               Int?
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt

  // Relationships
  //comercial           Comercial             @relation(fields: [CODE_COM], references: [code_com], onDelete: Cascade)
  avoirs              Avoirs[]
  bonliv              Bonliv[]
  devis               Devis[]
  facture             Facture[]
  reglements          Reglement[]
  UnifiedFactureAvoir UnifiedFactureAvoir[]
}

model Comercial {
  code_com Int      @id @default(autoincrement())
  nom      String
  tel      String?
  email    String?
  //clients  Client[]
  Devis    Devis[]
}


model Article {
  id              Int             @id @default(autoincrement())
  code_art        String          @unique
  ARTICLE         String
  photo           String?
  qt_cart         Int?
  PA_HT           Float
  TVA             Float
  PA_TTC          Float
  PV_HT           Float
  PV_TTC          Float
  CODE_FAM        String?
  CODE_SFAM       String?
  CODE_MAR        String?
  STK_MIN         Int
  STK_MAX         Int
  STK_SEC         Int?
  q_paquet        Int?
  Remise          Float?
  REF_OEM         String?
  VENTE_BLOQ      Boolean         @default(false)
  ACHAT_BLOQ      Boolean         @default(false)
  uav             String?
  frs             String?
  Remarque        String?
  substitution    String?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime?       @updatedAt
  qte_stk         Int             @default(0)

  // Keep existing relationships if needed
  // famille         famille?        @relation(fields: [CODE_FAM], references: [code_fam])
  // fournisseur     Fournisseur?    @relation(fields: [frs], references: [code_frs])
  
  bonlivDetails   DetailBonliv[]
  factureDetails  DetailFacture[]
  avoirDetails    DetailAvoirs[]
  devisDetails    DevisDetail[]
}

model famille {
  code_fam  Int        @id @default(autoincrement())
  nom       String
  //articles  Article[]
  
}



model Fournisseur {
  code_frs  String    @id
  compte    String?
  sociale   String
  desc      String?
  pays      String?
  echeance  Boolean @default(false)
  note      String?
  cond_paie Boolean @default(false)
  bloquer   Boolean @default(false)
  //articles  Article[]
}

model Devis {
  REF_DEV      String        @unique
  id           Int           @id @default(autoincrement())
  DATEVALID    DateTime?
  DATE_DEV     DateTime      @default(now())
  COMPTE       String?
  CODE_CLT     Int
  CLIENT       String
  MNT_HT       Float         @default(0)
  MNT_TTC      Float         @default(0)
  REMISEG      Float?
  CODE_COM     Int
  VALIDER      Boolean       @default(false)
  REMARQUE     String?
  MODELIV      String
  MODE_PAIE    String
  NOTES        String?
  client       Client        @relation(fields: [CODE_CLT], references: [code_clt], onDelete: Cascade)
  comercial    Comercial     @relation(fields: [CODE_COM], references: [code_com], onDelete: Cascade)
  devisDetails DevisDetail[]  
}

model DevisDetail {
  REF_DEV  String
  CODE_ART String
  ARTICLE  String
  QTE      Float
  GRATUIT  Float?
  PA_HT    Float
  PV_HT    Float
  PV_TTC   Float
  REMISE   Float
  TVA      Int
  TotalHT  Float   @default(0)
  TotalTTC Float   @default(0)
  article  Article @relation(fields: [CODE_ART], references: [code_art], onDelete: Cascade)
devis    Devis   @relation(fields: [REF_DEV], references: [REF_DEV], onDelete: Cascade)

  @@id([REF_DEV, CODE_ART])
}

model Bonliv {
  REF_BL        String        @id
  DATEVALID     DateTime?
  HEUREVALID    DateTime?
  REF_DEV       String
  DATE_BL       DateTime 
  COMPTE        String?
  CODE_CLT      Int
  CLIENT        String
  MNT_HT        Float
  MNT_TTC       Float
  MNT_HTliv        Float?
  MNT_TTCliv       Float?
  EN_FACTURE    Boolean
  VALIDER       Boolean
  MODELIV       String?
  MODE_PAIE     String?
  REMARQUE      String?
  CODE_COM      Int?
  CODE_ADR      Int?
  BASEHT        Boolean?
  IMPRIMER      Boolean?
  REMISEG  Float?

  client        Client        @relation(fields: [CODE_CLT], references: [code_clt], onDelete: Cascade)
  detailBonlivs DetailBonliv[] 
}

model DetailBonliv {
  REF_BL   String  
  CODE_ART String
  ARTICLE  String
  qteliv   Float?
  QTE      Float
  GRATUIT  Float?
  PA_HT    Float
  PV_HT    Float
  PV_TTC   Float
  REMISE   Float
  
  TVA      Int
  TotalHT  Float   @default(0)
  TotalTTC Float   @default(0)
  TotalHTliv  Float ?  
  TotalTTCliv Float ?  
  article  Article @relation(fields: [CODE_ART], references: [code_art], onDelete: Cascade)
  bonliv   Bonliv  @relation(fields: [REF_BL], references: [REF_BL], onDelete: Cascade)
@@id([REF_BL, CODE_ART])
}

model Facture {
  REF_FAC        String         @id
  DATEVALID      DateTime?
  HEUREVALID     DateTime?
  REF_BL         String
  DATE_FAC       DateTime
  COMPTE         String?
  CODE_CLT       Int
  CLIENT         String
  MNT_HT         Float
  MNT_TTC        Float
  CODE_COM       Int
  MODELIV        String?
  MODE_PAIE      String?
  MNT_DEV        Float?
  REMARQUE       String?
  BASEHT         Boolean?
  IsCanceled     Boolean @default(false)
  VALIDER        Boolean
  IMPRIMER       Boolean?
  detailFactures DetailFacture[] 
  client         Client         @relation(fields: [CODE_CLT], references: [code_clt], onDelete: Cascade)
}

  model DetailFacture {
    REF_FAC  String  
    CODE_ART String
    ARTICLE  String
    QTE      Float
    GRATUIT  Float?
    PA_HT    Float
    PV_HT    Float
    PV_TTC   Float
    PD_HT    Float?
    TotalHT  Float   @default(0)
    TotalTTC Float   @default(0)
    REMISE   Float
    REMISEG  Float?
    TVA      Int
    article  Article @relation(fields: [CODE_ART], references: [code_art], onDelete: Cascade)
    facture  Facture @relation(fields: [REF_FAC], references: [REF_FAC], onDelete: Cascade)
  @@id([REF_FAC, CODE_ART])
  }

model Avoirs {
  REF_AVR      String        @unique
  id           Int           @id @default(autoincrement())
  DATEVALID    DateTime?
  HEUREVALID   DateTime?
  DATE_AVR     DateTime @default(now())
  COMPTE       String?
  CODE_CLT     Int
  CLIENT       String
  MNT_HT       Float @default(0)
  MNT_TTC      Float @default(0)
  VALIDER      Boolean @default(false)
  CODE_COM     Int
  REMARQUE     String?
  BASEHT       Boolean?
  
  client       Client        @relation(fields: [CODE_CLT], references: [code_clt], onDelete: Cascade)
  detailAvoirs DetailAvoirs[]
}

model DetailAvoirs {
  REF_AVR  String  
  CODE_ART String
  ARTICLE  String
  QTE      Float
  GRATUIT  Float?
  PV_HT    Float
  PV_TTC   Float
  PA_HT    Float
  REMISE   Float
  REMISEG  Float?
  TotalHT  Float   @default(0)
  TotalTTC Float   @default(0)
  TVA      Int
  MAJ_STK  Boolean @default(false)
  article  Article @relation(fields: [CODE_ART], references: [code_art], onDelete: Cascade)
  avoirs   Avoirs  @relation(fields: [REF_AVR], references: [REF_AVR], onDelete: Cascade)

@@id([REF_AVR, CODE_ART])
}

model Reglement {
  REF_REGV         String           @id
  DATEVALID        DateTime?
  HEUREVALID       DateTime?
  CODE_CLT         Int
  CLIENT           String
  COMPTE           String?
  DATE_REM         DateTime?
  DATE_ECH         DateTime?
  DATE_PNT         DateTime?
  MODE_REG         String
  MNT_REGLER       Float
  BANQUE           String?
  IMPAYER          Float?
  CPT_BNQ          Int?
  REMARQUE         String?
  TIRER            String?
  VILLE            String?
  remainingAmount Float?
  DATE_REG         DateTime
  client           Client           @relation(fields: [CODE_CLT], references: [code_clt], onDelete: Cascade)
  reglementdetails ReglementDetail[]
}

model ReglementDetail {
  REF_REGV            String              
  REF_AV_FAC          String
  DATE_DOC            DateTime @default(now())
  MNT_ORIGINAL        Float
  MNT_REGLER          Float
  unifiedFactureAvoir UnifiedFactureAvoir @relation(fields: [REF_AV_FAC], references: [REF_AV_FAC], onDelete: Cascade)
  reglement           Reglement           @relation(fields: [REF_REGV], references: [REF_REGV], onDelete: Cascade)
@@id([REF_REGV,  REF_AV_FAC])
}

model UnifiedFactureAvoir {
  REF_AV_FAC       String            @id
  DATE_DOC         DateTime
  MNT_TTC          Float
  MNT_REGLER       Float
  code_clt         Int
  reglementDetails ReglementDetail[]
  client           Client            @relation(fields: [code_clt], references: [code_clt], onDelete: Cascade)
}


model User {
  UserID               Int      @id @default(autoincrement())
  Email                String   @unique
  Name                 String
  PasswordHash         String
  IsManager            Boolean  @default(false)
  CanManageQuote       Boolean  @default(false)
  CanManageDeliveryNote Boolean @default(false)
  CanManageInvoice Boolean @default(false)
  CanProcessPayments   Boolean  @default(false)
  CanProcessReturns    Boolean  @default(false)
  CanManageArticles    Boolean  @default(false)
  CanManageClients     Boolean  @default(false)
  CanManageCommercials Boolean  @default(false)
  CanManageFournisseurs Boolean @default(false)
  LastLoginDate        DateTime?
  CreatedAt            DateTime @default(now())
  UpdatedAt            DateTime @updatedAt
}
